@use "../../utils/colors" as colors;
@use "../../utils/font" as font;

pre code {
  font-family: font.$font-family-code;
}

pre.highlight {
  background: colors.$white;

  .c,
    /* Comment */
    .cm,
    /* Comment.Multiline */
    .cp,
    /* Comment.Preproc */
    .c1,
    /* Comment.Single */
    .cs {
    /* Comment.Special */
    color: colors.$gray;
  }

  .k,
    /* Keyword */
    .kc,
    /* Keyword.Constant */
    .kd,
    /* Keyword.Declaration */
    .kp,
    /* Keyword.Pseudo */
    .kr,
    .kt

    /* Keyword.Reserved */
    .nb {
    /* Name.Builtin */
    color: colors.$orange;
  }

  .nv,
    /* Name.Variable */
    .nf {
    /* Name.Function */
    color: colors.$black;
  }

  .s,
    /* Literal.String */
    .sb,
    /* Literal.String.Backtick */
    .sc,
    /* Literal.String.Char >> --color-syntax-characters */
    .sd,
    /* Literal.String.Doc */
    .s2,
    /* Literal.String.Double */
    .se,
    /* Literal.String.Escape */
    .sh,
    /* Literal.String.Heredoc */
    .si,
    /* Literal.String.Interpol */
    .s1,
    /* Literal.String.Single */
    .sx {
    /* Literal.String.Other */
    color: colors.$purple;
  }

  .na {
    /* Name.Attribute */
    color: colors.$black;
  }

  .nc,
    /* Name.Class */
    .ni,
    /* Name.Entity */
    .no,
    /* Name.Constant */
    .vc,
    /* Name.Variable.Class */
    .vg,
    /* Name.Variable.Global */
    .vi {
    /* Name.Variable.Instance */
    color: colors.$brown-light;
  }

  .err,
    /* Error */
    .gr,
    /* Generic.Error */
    .gt,
    /* Generic.Traceback */
    .ne {
    /* Name.Exception */
    color: colors.$brown-light;
  }

  .m,
    /* Literal.Number */
    .mf,
    /* Literal.Number.Float */
    .mh,
    /* Literal.Number.Hex */
    .mi,
    /* Literal.Number.Integer */
    .il,
    /* Literal.Number.Integer.Long */
    .mo {
    /* Literal.Number.Oct */
    color: colors.$black;
  }

  .o,
    /* Operator */
    .ow,
    /* Operator.Word */
    .gs {
    /* Generic.Strong */
    font-weight: bold;
  }

  .ge {
    /* Generic.Emph */
    font-style: italic;
  }

  .nt {
    /* Name.Tag */
    color: colors.$orange;
  }

  .gd,
    /* Generic.Deleted */
    .gd .x {
    /* Generic.Deleted.Specific */
    color: colors.$black;
    background-color: colors.$pink;
  }

  .gi,
    /* Generic.Inserted */
    .gi .x {
    /* Generic.Inserted.Specific */
    color: colors.$black;
    background-color: colors.$pink;
  }

  .gh,
    /* Generic.Heading */
    .bp,
    /* Name.Builtin.Pseudo */
    .go,
    /* Generic.Output */
    .gp,
    /* Generic.Prompt */
    .gu,
    /* Generic.Subheading */
    .w {
    /* Text.Whitespace */
    color: colors.$black;
  }

  .nn {
    /* Name.Namespace */
    color: colors.$orange;
  }

  .sr {
    /* Literal.String.Regex */
    color: colors.$green;
  }

  .ss {
    /* Literal.String.Symbol */
    color: colors.$black;
  }

  /* Make prompts non-selectable, to make it easy to copy and paste */
  .gp {
    -webkit-user-select: none;
    user-select: none;

    & + .w {
      -webkit-user-select: none;
      user-select: none;
    }
  }
}

.language-console {
  color: colors.$gray;
}

// Explicit syntax highlighting for C++ code blocks:

.language-cpp .cp,
.language-cpp .kt,
.language-cpp .nl,
.language-cpp .o,
.language-c\+\+ .cp,
.language-c\+\+ .kt,
.language-c\+\+ .nl,
.language-c\+\+ .o {
  color: colors.$orange;
}
